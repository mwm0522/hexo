<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[小程序选项卡与上拉加载下拉刷新 小程序码]]></title>
    <url>%2Fhexo%2F2019%2F10%2F10%2Fminprogram%2F</url>
    <content type="text"><![CDATA[上拉加载 下拉刷新 wxml布局 123456789&lt;view class=&quot;tab&quot;&gt; &lt;block wx:for=&quot;&#123;&#123;tab&#125;&#125;&quot; wx:key=&quot;key&quot;&gt; //data-index data-id 给view元素自定义属性。 &lt;view data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;&#123;&#123;num==index?&apos;selected&apos;:&apos;&apos;&#125;&#125;&quot; bindtap=&quot;click&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/view&gt; &lt;/block&gt;&lt;/view&gt;&lt;view class=&quot;tab_content&quot;&gt; &lt;view&gt;&#123;&#123;num&#125;&#125;&lt;/view&gt;&lt;/view&gt; json文件开启下拉加载 上拉刷新的配置 1234&#123; &quot;enablePullDownRefresh&quot;:true, &quot;backgroundTextStyle&quot;: &quot;dark&quot;,&#125; js的代码逻辑 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859Page(&#123; data:&#123; //模拟后台返回的选项卡 tab:[ &#123;id:1,name:&apos;全部&apos;&#125;,&#123;id:2,name:&apos;待付款&apos;&#125;,&#123;id:3,name:&apos;待发货&apos;&#125;,&#123;id:4,name:&apos;待收货&apos;&#125; ], order:[],//获取到phone, pageNum: 1//请求后台接口传给后台的页面数， total:0, result:&#123; phone:[ &#123;id:1,PhonesName:&apos;华为&apos;,salePrice:6999,picUrl:&apos;www.huawei.com&apos;&#125;, &#123;id:2,PhonesName:&apos;苹果&apos;,salePrice:4999,picUrl:&apos;www.apple.com&apos;&#125; &#123;id:3,PhonesName:&apos;小米&apos;,salePrice:3999,picUrl:&apos;www.xiaomi.com&apos;&#125; &#123;id:4,PhonesName:&apos;中兴&apos;,salePrice:1999,picUrl:&apos;www.zhongxing.com&apos;&#125; ] total:20 &#125; num:0, &#125; click:function(e)&#123; //获取每一个下标赋值给num this.setData(&#123; num:e.currentTarget.dataset.index &#125;) &#125;, //上拉加载 onReachBottom:function(e)&#123; var that = this; var pageNum = that.data.pageNum; var total = that.data.total var pageSize = pageNum*10; if(pageSize&gt;total)&#123; app.showError(&apos;没有更多数据&apos;) &#125;else&#123; let pageNum = pageNum++//页码数+1 let params = &#123; pageNum:pageNum, &#125; app.HttpPost(&quot;api/order/list&quot;, params) 此处是封装的请求大家可以换成自己封装的 .then(function(res) &#123; var len = res.data.result.length 获取到初始化赋值的order触底请求一次数据，拼接一次数组。 let order = that.data.order.concat(result.phone) that.setData(&#123; order: order pageNum:pageNum &#125;); &#125;) &#125; &#125;) //下拉刷新 onPullDownRefresh: function() &#123; this.setData(&#123; pageNum: 1 &#125;) this.init();//此处是本页面初始化的请求 &#125;,&#125;) 前端生成小程序码 业务场景: 邀请用户; access_token是必须的参数，需要后台传给你。 js代码 12345678910111213141516171819202122232425Page(&#123; data:&#123;&#125;, onLoad:function(e)&#123;&#125;, onShow:function(e)&#123; // 假如后台已经把access_token传给你； var access_token = that.data.access_token; var userId = that.data.userId; wx.request(&#123; method: &quot;POST&quot;, responseType: &apos;arraybuffer&apos;, url: &apos;https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=&apos;+access_token, data:&#123; scene:&apos;000&apos;, path: &apos;pages/me/register/register?userId=&apos; + userId, width:430 &#125;, success:function(res)&#123; var src2 = wx.arrayBufferToBase64(res.data);获取到的数据需要转换成二维码图片 that.setData(&#123; src2:src2 &#125;) &#125; &#125;) &#125;,&#125;) wxml页面处理 1&lt;image src=&apos;data:image/png;base64,&#123;&#123;src2&#125;&#125;&apos; mode=&quot;widthFix&quot;&gt;&lt;/image&gt;]]></content>
      <tags>
        <tag>选项卡 上拉加载 下拉刷新 小程序码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序页面滚动选型卡吸顶]]></title>
    <url>%2Fhexo%2F2019%2F10%2F09%2Fminiprogram%2F</url>
    <content type="text"><![CDATA[wxml默认布局he 1234567891011121314&lt;view class=&quot;container&quot;&gt;&lt;view class=&quot;banner&quot;&gt;&lt;/view&gt; &lt;view class=&quot;tab &#123;&#123;bannerH&lt;scrollTop?&apos;fixNav&apos;:&apos;&apos;&#125;&#125;&quot;&gt; &lt;block wx:for=&quot;&#123;&#123;tabs&#125;&#125;&quot; wx:key=&quot;key&quot;&gt; &lt;view bindtap=&quot;click&quot; data-index=&quot;&#123;&#123;index&#125;&#125;&quot; class=&quot;&#123;&#123;num==index?&apos;selected&apos;:&apos;&apos;&#125;&#125;&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/view&gt; &lt;/block&gt; &lt;/view&gt; &lt;view class=&quot;tab_content&quot;&gt; &lt;view wx:if=&quot;&#123;&#123;num==0&#125;&#125;&quot;&gt;宝贝&lt;/view&gt; &lt;view wx:if=&quot;&#123;&#123;num==1&#125;&#125;&quot;&gt;详情&lt;/view&gt; &lt;view wx:if=&quot;&#123;&#123;num==2&#125;&#125;&quot;&gt;评论&lt;/view&gt; &lt;view wx:if=&quot;&#123;&#123;num==3&#125;&#125;&quot;&gt;推荐商品&lt;/view&gt; &lt;/view&gt;&lt;/view&gt; js逻辑处理 分析: ①选项卡的制作。 ②页面的高度大于banner元素高度时候，tab元素内容应固定在页面顶部，反之回到原来位置。 12345678910111213141516171819202122232425262728Page(&#123; data:&#123; tab:[&#123;name:&apos;宝贝&apos;&#125;,&#123; name: &apos;详情&apos; &#125;,&#123; name: &apos;评论&apos; &#125;,&#123; name: &apos;推荐&apos; &#125;] num:0 &#125; onLoad:function(options)&#123; //获取banner元素高度 var that = this; const query = wx.createSelectorQuery(); query.select(&apos;.banner&apos;).boundingClientRect(); query.exec(function(rect)&#123; that.setData(&#123; bannerH:rect[0].height &#125;) &#125;) &#125;, click:function(e)&#123; this.setData(&#123; num: e.currentTarget.dataset.index &#125;) &#125; //获取页面滚动高度 onPageScroll:function(e)&#123; that.setData(&#123; scrollTop:e.scrollTop &#125;) &#125;&#125;) wxss布局 123456789101112.tab&#123; display:flex; justify-content:space-between; align-items:center;&#125;.fixNav&#123; position:fixed top:0, width:100%; z-index:9999; background-color:#fff;&#125;]]></content>
      <tags>
        <tag>小程序、吸顶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[flex 布局]]></title>
    <url>%2Fhexo%2F2019%2F08%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[布局是css的重点之一，提高代码的重用性，提高你的工作效率。 ~~概念:flex布局：英文全称Flexible Box,就是弹性布局的意思。采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。 一、作用在容器上的属性（我这里只列举我们工作中经常用到的。） 1、flex-direction：决定主轴的方向 ，值有 row row-reverse column column-reverse row:水平 正序排列 row-reverse:水平 倒序排列 column:纵向 正序排列 column-reverse:纵向 倒序排列 2、flex-warp：决定项目成员怎么换行。 nowrap wrap wrap-reverse nowrap：不换行 默认的 wrap：换行，第一行在上方。 wrap-reverse：换行，第一行在下方。 3、justify-content:决定了项目成员的对齐方式 flex-start | flex-end | center | space-between | space-around; 4、align-items:项目在交叉轴上如何对齐 flex-start | flex-end | center | baseline | stretch; 5、align-content:多根轴线的对齐方式。 align-content: flex-start | flex-end | center | space-between | space-around | stretch; 二、封装代码：命名一个class名字，放在一个公用文件夹，用的时候可以直接调用。 垂直居中： 123display: flex; justify-content: center; align-items: center; 水平居中： ``` display: flex; justify-content: center; ```~~]]></content>
  </entry>
</search>
